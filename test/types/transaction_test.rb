require "test_helper"

class TransactionTest < Minitest::Test
  # json is generated by rpc.get_transaction("0x1572509e3706cdb9c74da267d3dbed9ff50bdf750ec78514dcaa60b7df5dd0d4")
  TX_JSON_HASH = {:cell_deps=>
    [{:dep_type=>"dep_group",
      :out_point=>
      {:index=>"0x0",
        :tx_hash=>
        "0x71a7ba8fc96349fea0ed3a5c47992e3b4084b031a42264a018e0072e8172e46c"}},
    {:dep_type=>"code",
      :out_point=>
      {:index=>"0x2",
        :tx_hash=>
        "0xe2fb199810d49a4d8beec56718ba2593b665db9d52299a0f9e6e75416d73ff5c"}}],
  :hash=>"0x1572509e3706cdb9c74da267d3dbed9ff50bdf750ec78514dcaa60b7df5dd0d4",
  :header_deps=>
    ["0x625054a04185eb38f45202361988e052da3ed2c1f21a784d7e8b42565a3a98bb"],
  :inputs=>
    [{:previous_output=>
      {:index=>"0x0",
        :tx_hash=>
        "0x1f813ae5ab67383b8e80cc695b6b3770cd0fde77ec5d78a863afe61851fb5a1e"},
      :since=>"0x0"},
    {:previous_output=>
      {:index=>"0x0",
        :tx_hash=>
        "0xf0b776e04a54cb441f0fff37e523a39366e90054153eaf1cd1f3f1b134e8b668"},
      :since=>"0x0"}],
  :outputs=>
    [{:capacity=>"0x31d364dc00",
      :lock=>
      {:args=>"0x1b4136d076303dd506c48200f66d88a62b3945e2",
        :code_hash=>
        "0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8",
        :hash_type=>"type"},
      :type=>
      {:args=>"0x",
        :code_hash=>
        "0x82d76d1b75fe2fd9a27dfbaa65a039221a380d76c926f378d3f81cf3e7e13f2e",
        :hash_type=>"type"}},
    {:capacity=>"0x2540bd2de",
      :lock=>
      {:args=>"0x86a717a85f07cd3c51cb493b3016ae86cc4d5656",
        :code_hash=>
        "0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8",
        :hash_type=>"type"},
      :type=>nil}],
  :outputs_data=>["0x6d89010000000000", "0x"],
  :version=>"0x0",
  :witnesses=>
    ["0x55000000100000005500000055000000410000002dd769898cb19652b2e8782303ffadf9e0670c9583ee8da37b9ea4bb223a7b774f99615c0375e2a308b03fe0c77730a5fdddf43e1ebab24ef52586af4084d06b00",
    "0x5500000010000000550000005500000041000000ea39732026b7b2b69d5faa014aee312ece9c0c2dab190c0f8b5bb9ef8f0ace5d0ba29307c4cd244867baf50207b1d6b5b0519fa1271c3f4f0100da8be9d8491a00"]}

  def test_nested_initialize
    output = CKB::Types::Output.new(
      {:capacity=>"0x2540bd2de",
      :lock=>
      {:args=>"0x86a717a85f07cd3c51cb493b3016ae86cc4d5656",
        :code_hash=>
        "0x9bd7e06f3ecf4be0f2fcd2188b23f1b9fcc88e5d4b65a8637b17723bbda3cce8",
        :hash_type=>"type"},
      :type=>nil}
    )

    tx = CKB::Types::Transaction.new(:outputs => [output])
    assert_equal output, tx.outputs.first
  end

  def test_as_json
    tx = CKB::Types::Transaction.new TX_JSON_HASH
    assert_equal sanitize_hash(TX_JSON_HASH), sanitize_hash(tx.as_json)
  end

  def test_compute_hash
    tx = CKB::Types::Transaction.new TX_JSON_HASH
    assert_equal "0x1572509e3706cdb9c74da267d3dbed9ff50bdf750ec78514dcaa60b7df5dd0d4", tx.compute_hash.to_hex
  end
end
